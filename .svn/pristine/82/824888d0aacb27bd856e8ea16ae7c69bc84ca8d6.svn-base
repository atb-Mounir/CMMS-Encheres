/**
 * 
 */
package org.encheres.dal;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import org.encheres.bo.Article;
import org.encheres.bo.Categorie;
import org.encheres.bo.Enchere;
import org.encheres.bo.Retrait;
import org.encheres.bo.Utilisateur;

import org.encheres.BusinessException;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

/**
 * Classe en charge de
 * 
 * @author mdelauna2
 * @version EncheresCMM - V1.0
 * @date 22 janv. 2020 - 12:22:20
 */
public class ArticleDAOJdbcImpl implements ArticleDAO {
	
	


	private static final String INSERT_ARTICLE="INSERT INTO ARTICLES_VENDUS (nom_article,description,date_debut_encheres,date_fin_encheres,prix_initial,no_vendeur,no_categorie) "
				+ "VALUES (?,?,?,?,?,?,?)";
	
	private static final String INSERT_RETRAIT="INSERT INTO RETRAITS (no_article,rue,code_postal,ville) "
			+ "VALUES (?,?,?,?)"; 
	
	


	private static final String DETAIL_DE_VENTE = "SELECT a.no_article,nom_article,description,c.no_categorie, c.libelle as 'categorie', max(e.montant_enchere) as 'Meilleure offre', "
			+ "date_fin_encheres, date_debut_encheres, prix_initial, r.rue, r.code_postal, r.ville, u.pseudo, u.telephone,  u.credit "
			+ "FROM ARTICLES_VENDUS a " 
			+ "LEFT JOIN RETRAITS r ON a.no_vendeur= r.no_article "
			+ "JOIN UTILISATEURS u ON a.no_vendeur=u.no_utilisateur "
			+ "LEFT JOIN ENCHERES e ON u.no_utilisateur = e.no_acheteur "
			+ "JOIN CATEGORIES c ON a.no_categorie=c.no_categorie " 
			+ "WHERE a.no_article = ? "
			+ "GROUP BY a.no_article,nom_article,description,c.no_categorie, c.libelle, e.montant_enchere,date_debut_encheres,date_fin_encheres,prix_initial, r.rue, r.code_postal, r.ville, u.pseudo, u.telephone,  u.credit";
	


	public void insertRetrait(Retrait retrait) throws BusinessException {
		// TODO Auto-generated method stub

	}

	@Override
	public Article selectArticleById(String no_article) {
		Article art = null;
		try (Connection cnx = ConnectionProvider.getConnection();
				PreparedStatement rqt = cnx.prepareStatement(DETAIL_DE_VENTE);) {

			rqt.setString(1, no_article);
			try (ResultSet rs = rqt.executeQuery()) {

				Categorie cat = null;
				Retrait retr = null;
				Utilisateur ut = null;
				while (rs.next()) {
					// je crée les nouveaux objets pour pouvoir les inséser dans l'objet Article
					cat = new Categorie(rs.getString("categorie"));
					retr = new Retrait(rs.getString("rue"), rs.getString("code_postal"), rs.getString("ville"));
					ut = new Utilisateur(rs.getString("pseudo"), rs.getString("telephone"), rs.getInt("credit"));

					art = new Article(rs.getInt("no_article"), rs.getString("nom_article"),
							rs.getString("description"), rs.getDate("date_debut_encheres").toLocalDate(),
							rs.getDate("date_fin_encheres").toLocalDate(), rs.getInt("prix_initial"),
							rs.getInt("Meilleure offre"), cat, retr, ut);
					System.out.println("rue retrait"+retr.getRueRetrait());
					System.out.println("Je suis dans ***");
					System.out.println("numeroArticle dans la jdbc" + art.getNoArticle());
				}
			}

			return art;
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return art;
	}



	@Override
	public void insertNouvelleVente(Article newArticle) throws BusinessException{
		if (newArticle==null)
		{
			BusinessException businessException = new BusinessException();
			businessException.ajouterErreur(CodesResultatDAL.INSERT_OBJET_NULL);
			throw businessException;
		}
		try(Connection cnx = ConnectionProvider.getConnection())
		{
			cnx.setAutoCommit(false);
			try
			{
				PreparedStatement pstmt = cnx.prepareStatement(INSERT_ARTICLE,PreparedStatement.RETURN_GENERATED_KEYS);
				System.out.println("je fais un pstmt INSERT ARTICLE");
				pstmt.setString(1,newArticle.getNomArticle());
				pstmt.setString(2,newArticle.getDescription());
				pstmt.setDate(3,java.sql.Date.valueOf(newArticle.getDateDebutEncheres()));
				pstmt.setDate(4,java.sql.Date.valueOf(newArticle.getDateFinEncheres()));
				pstmt.setInt(5, newArticle.getMiseAPrix());
				pstmt.setInt(6, newArticle.getUtilisateur().getNoUtilisateur());
				System.out.println("Dans le pstmt INSERT ARTICLE j'enregistre le no_Catégorie à partir de la liste");
				pstmt.setInt(7, newArticle.getCategorie().getNoCategorie());
				pstmt.executeUpdate();
				System.out.println("Dans le pstmt INSERT ARTICLE récupération de la PK");
				ResultSet rs = pstmt.getGeneratedKeys();
				if (rs.next())
				{
					newArticle.setNoArticle(rs.getInt(1));
				}
				System.out.println("Récupération de la PK");
				rs.close();
				pstmt.close();
					pstmt = cnx.prepareStatement(INSERT_RETRAIT);
					System.out.println("transmission de la PK article pour le no-retrait");
					pstmt.setInt(1, newArticle.getNoArticle());
					pstmt.setString(2, newArticle.getRetrait().getRueRetrait());
					pstmt.setString(3, newArticle.getRetrait().getCpRetrait());
					pstmt.setString(4, newArticle.getRetrait().getVilleRetrait());
					pstmt.executeUpdate();
					System.out.println("Mise à jour dans la BDD de la nouvelle vente");
					pstmt.close();
					cnx.commit();
			}
			catch (Exception e) {
				e.printStackTrace();
				cnx.rollback();
				throw e;
			}
		} catch (Exception e) {
			e.printStackTrace();
			BusinessException businessException = new BusinessException();
			businessException.ajouterErreur(CodesResultatDAL.INSERT_OBJET_NULL);
		}
	
		
	}



}
